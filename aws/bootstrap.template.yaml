AWSTemplateFormatVersion: "2010-09-09"

Description: >
  AWS CloudFormation Template for bootstrapping DeutschWiederholen AWS build infrastructure. Needs to be executed just once and be fairly stable.

Parameters:
  GitHubUsername:
    Default: jacekbilski
    Description: A GitHub username
    Type: String
  GitHubRepository:
    Default: DeutschWiederholen
    Description: A GitHub repository
    Type: String
  RepositoryBranch:
    Default: master
    Description: A branch name in a repository
    Type: String
  GitHubOAuthToken:
    NoEcho: true
    Description: A GitHub OAuth token
    Type: String
  PipelineName:
    Default: deutsch-wiederholen
    Description: A name for pipeline
    Type: String
  TemplateFileName:
    Default: aws/deutsch-wiederholen.template.yaml
    Description: The file name of the template
    Type: String
  StackName:
    Default: deutsch-wiederholen
    Description: A name for the CloudFormation stack
    Type: String
  ChangeSetName:
    Default: deutsch-wiederholen-change-set
    Description: A name for the stack change set
    Type: String
  Email:
    Default: jacek.bilski@innoq.com
    Description: The email address where CodePipeline sends pipeline notifications
    Type: String

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: "CodePipeline Settings"
        Parameters:
          - PipelineName
          - Email
      - Label:
          default: "GitHub Settings"
        Parameters:
          - GitHubUsername
          - GitHubRepository
          - RepositoryBranch
      - Label:
          default: "Stack Settings"
        Parameters:
          - ChangeSetName
          - StackName
          - StackConfig

Resources:
  CFNRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Action: ['sts:AssumeRole']
          Effect: Allow
          Principal:
            Service: [cloudformation.amazonaws.com]
        Version: '2012-10-17'
      Path: /
      Policies:
        - PolicyName: CloudFormationRole
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Action:
                  - 'iam:*'
                  - 'cloudformation:*'
                  - 'apigateway:*'
                Effect: Allow
                Resource: '*'

  PipelineRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Action: ['sts:AssumeRole']
          Effect: Allow
          Principal:
            Service: [codepipeline.amazonaws.com]
        Version: '2012-10-17'
      Path: /
      Policies:
        - PolicyName: CodePipelineAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Action:
                - 's3:*'
                - 'cloudformation:CreateStack'
                - 'cloudformation:DescribeStacks'
                - 'cloudformation:DeleteStack'
                - 'cloudformation:UpdateStack'
                - 'cloudformation:CreateChangeSet'
                - 'cloudformation:ExecuteChangeSet'
                - 'cloudformation:DeleteChangeSet'
                - 'cloudformation:DescribeChangeSet'
                - 'cloudformation:SetStackPolicy'
                - 'iam:PassRole'
                - 'sns:Publish'
                Effect: Allow
                Resource: '*'

  ArtifactStoreBucket:
    Type: AWS::S3::Bucket
    Properties:
      VersioningConfiguration:
        Status: Enabled

  CodePipelineSNSTopic:
    Type: AWS::SNS::Topic
    Properties:
      Subscription:
        - Endpoint: !Ref Email
          Protocol: email

  Pipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      ArtifactStore:
        Location: !Ref 'ArtifactStoreBucket'
        Type: S3
      DisableInboundStageTransitions: []
      Name: !Ref 'PipelineName'
      RoleArn: !GetAtt [PipelineRole, Arn]
      Stages:
        - Name: Source
          Actions:
            - Name: TemplateSource
              ActionTypeId:
                Category: Source
                Owner: ThirdParty
                Provider: GitHub
                Version: '1'
              Configuration:
                Owner: !Ref 'GitHubUsername'
                Repo: !Ref 'GitHubRepository'
                Branch: !Ref 'RepositoryBranch'
                PollForSourceChanges: true
                OAuthToken: !Ref GitHubOAuthToken
              OutputArtifacts:
                - Name: Source
              RunOrder: '1'
        - Name: Deploy
          Actions:
            - Name: CreateChangeSet
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: '1'
              InputArtifacts:
                - Name: Source
              Configuration:
                ActionMode: CHANGE_SET_REPLACE
                RoleArn: !GetAtt [CFNRole, Arn]
                Capabilities: CAPABILITY_NAMED_IAM
                StackName: !Ref StackName
                ChangeSetName: !Ref ChangeSetName
                TemplatePath: !Sub "Source::${TemplateFileName}"
              RunOrder: '1'
            - Name: ApproveChangeSet
              ActionTypeId:
                Category: Approval
                Owner: AWS
                Provider: Manual
                Version: '1'
              Configuration:
                NotificationArn: !Ref CodePipelineSNSTopic
                CustomData: !Sub 'A new change set was created for the ${StackName} stack. Do you want to implement the changes?'
              RunOrder: '2'
            - Name: ExecuteChangeSet
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: '1'
              Configuration:
                ActionMode: CHANGE_SET_EXECUTE
                ChangeSetName: !Ref ChangeSetName
                RoleArn: !GetAtt [CFNRole, Arn]
                StackName: !Ref StackName
              RunOrder: '3'
